import React, { useEffect } from 'react';
import { useCart } from '../contexts/CartContext';
import Suggestion from './Suggestion';
import './ProductDetailModal.css';

const ProductDetailModal = ({ 
  product, 
  isOpen, 
  onClose, 
  onToggleFavorite, 
  isFavorite, 
  showToast,
  allProducts,
  favorites
}) => {
  const { addToCart } = useCart();

  // ƒê√≥ng modal khi nh·∫•n Escape
  useEffect(() => {
    const handleEscape = (e) => {
      if (e.key === 'Escape') {
        onClose();
      }
    };

    if (isOpen) {
      document.addEventListener('keydown', handleEscape);
      document.body.style.overflow = 'hidden'; // NgƒÉn scroll background
    }

    return () => {
      document.removeEventListener('keydown', handleEscape);
      document.body.style.overflow = 'unset';
    };
  }, [isOpen, onClose]);

  if (!isOpen || !product) return null;

  const handleAddToCart = () => {
    addToCart(product);
    showToast(`ƒê√£ th√™m "${product.name}" v√†o gi·ªè h√†ng!`, 'success');
  };

  const handleToggleFavorite = () => {
    onToggleFavorite(product.id);
    
    // ‚ùå X√ìA TOAST ·ªû ƒê√ÇY - ƒë·ªÉ App.js x·ª≠ l√Ω
    // if (isFavorite) {
    //   showToast(`ƒê√£ x√≥a "${product.name}" kh·ªèi danh s√°ch y√™u th√≠ch`, 'info');
    // } else {
    //   showToast(`ƒê√£ th√™m "${product.name}" v√†o danh s√°ch y√™u th√≠ch ‚ù§Ô∏è`, 'success');
    // }
  };

  const formatPrice = (price) => {
    return new Intl.NumberFormat('vi-VN', {
      style: 'currency',
      currency: 'VND'
    }).format(price);
  };

  const calculateDiscount = () => {
    if (!product.originalPrice) return 0;
    return Math.round(((product.originalPrice - product.price) / product.originalPrice) * 100);
  };

  const getCategoryIcon = () => {
    switch (product.category) {
      case 'course':
        return 'üéì';
      case 'book':
        return 'üìö';
      case 'document':
        return 'üìÑ';
      default:
        return 'üìñ';
    }
  };

  const getCategoryLabel = () => {
    switch (product.category) {
      case 'course':
        return 'Kh√≥a h·ªçc';
      case 'book':
        return 'S√°ch';
      case 'document':
        return 'T√†i li·ªáu';
      default:
        return 'S·∫£n ph·∫©m';
    }
  };

  const getDetailedDescription = () => {
    switch (product.category) {
      case 'course':
        return `Kh√≥a h·ªçc ${product.name} ƒë∆∞·ª£c thi·∫øt k·∫ø d√†nh cho h·ªçc vi√™n c√≥ tr√¨nh ƒë·ªô ${product.level.toLowerCase()}. 
        V·ªõi th·ªùi l∆∞·ª£ng ${product.duration}, b·∫°n s·∫Ω ƒë∆∞·ª£c h·ªçc tr·ª±c ti·∫øp v·ªõi ${product.instructor} - m·ªôt gi·∫£ng vi√™n 
        c√≥ nhi·ªÅu nƒÉm kinh nghi·ªám trong vi·ªác gi·∫£ng d·∫°y ti·∫øng Anh. Kh√≥a h·ªçc bao g·ªìm ƒë·∫ßy ƒë·ªß c√°c k·ªπ nƒÉng 
        nghe, n√≥i, ƒë·ªçc, vi·∫øt v√† ƒë∆∞·ª£c thi·∫øt k·∫ø theo chu·∫©n qu·ªëc t·∫ø.`;
      
      case 'book':
        return `${product.name} ƒë∆∞·ª£c xu·∫•t b·∫£n b·ªüi ${product.publisher}, t√°c gi·∫£ ${product.author}. 
        Cu·ªën s√°ch g·ªìm ${product.pages} trang v·ªõi n·ªôi dung ƒë∆∞·ª£c bi√™n so·∫°n khoa h·ªçc, ph√π h·ª£p cho vi·ªác 
        t·ª± h·ªçc v√† ƒë∆∞·ª£c s·ª≠ d·ª•ng r·ªông r√£i trong c√°c tr∆∞·ªùng ƒë·∫°i h·ªçc v√† trung t√¢m gi√°o d·ª•c tr√™n to√†n th·∫ø gi·ªõi.`;
      
      case 'document':
        return `T√†i li·ªáu ${product.name} cung c·∫•p ${product.pages} trang n·ªôi dung ch·∫•t l∆∞·ª£ng cao 
        ·ªü ƒë·ªãnh d·∫°ng ${product.format}. ${product.downloadable ? 'B·∫°n c√≥ th·ªÉ t·∫£i xu·ªëng ngay sau khi mua ƒë·ªÉ h·ªçc b·∫•t c·ª© l√∫c n√†o.' : ''} 
        ƒê√¢y l√† t√†i li·ªáu thi·∫øt y·∫øu cho vi·ªác chu·∫©n b·ªã thi v√† n√¢ng cao tr√¨nh ƒë·ªô ti·∫øng Anh.`;
      
      default:
        return product.description;
    }
  };

  return (
    <div className="modal-overlay" onClick={onClose}>
      <div className="modal-content" onClick={(e) => e.stopPropagation()}>
        {/* Modal Header */}
        <div className="modal-header">
          <button className="modal-close" onClick={onClose}>√ó</button>
        </div>

        {/* Modal Body */}
        <div className="modal-body">
          {/* Product Info Container */}
          <div className="product-info-container">
            {/* Image Section */}
            <div className="modal-image-section">
              <div className="modal-image-container">
                <img 
                  src={product.image} 
                  alt={product.name}
                  className="modal-image"
                  onError={(e) => {
                    e.target.src = '/placeholder-product.jpg';
                  }}
                />
                
                {/* Category Badge */}
                <div className="modal-category-badge">
                  <span className="category-icon">{getCategoryIcon()}</span>
                  <span className="category-text">{getCategoryLabel()}</span>
                </div>

                {/* Discount Badge */}
                {product.originalPrice && (
                  <div className="modal-discount-badge">
                    -{calculateDiscount()}%
                  </div>
                )}
              </div>
            </div>

            {/* Info Section */}
            <div className="modal-info-section">
              <div className="modal-title-section">
                <h2 className="modal-title">{product.name}</h2>
                
                {/* Favorite button */}
                <button 
                  className={`modal-favorite-btn ${isFavorite ? 'active' : ''}`}
                  onClick={handleToggleFavorite}
                  title={isFavorite ? 'B·ªè y√™u th√≠ch' : 'Th√™m v√†o y√™u th√≠ch'}
                >
                  <span className="heart-icon">‚ô•</span>
                  {isFavorite ? 'ƒê√£ y√™u th√≠ch' : 'Y√™u th√≠ch'}
                </button>
              </div>

              {/* Rating */}
              <div className="modal-rating">
                <div className="stars">
                  {[...Array(5)].map((_, index) => (
                    <span 
                      key={index} 
                      className={`star ${index < Math.floor(product.rating) ? 'filled' : ''}`}
                    >
                      ‚òÖ
                    </span>
                  ))}
                  <span className="rating-number">({product.rating})</span>
                </div>
                <span className="reviews-count">{product.reviews} ƒë√°nh gi√°</span>
              </div>

              {/* Price */}
              <div className="modal-price">
                <div className="current-price">
                  {formatPrice(product.price)}
                </div>
                {product.originalPrice && (
                  <div className="original-price">
                    {formatPrice(product.originalPrice)}
                  </div>
                )}
              </div>

              {/* Description */}
              <div className="modal-description">
                <h3>M√¥ t·∫£ chi ti·∫øt</h3>
                <p>{getDetailedDescription()}</p>
              </div>

              {/* Product Details */}
              <div className="modal-details">
                <h3>Th√¥ng tin chi ti·∫øt</h3>
                <div className="details-grid">
                  {product.category === 'course' && (
                    <>
                      <div className="detail-row">
                        <span className="detail-label">‚è±Ô∏è Th·ªùi l∆∞·ª£ng:</span>
                        <span className="detail-value">{product.duration}</span>
                      </div>
                      <div className="detail-row">
                        <span className="detail-label">üìä Tr√¨nh ƒë·ªô:</span>
                        <span className="detail-value">{product.level}</span>
                      </div>
                      <div className="detail-row">
                        <span className="detail-label">üë®‚Äçüè´ Gi·∫£ng vi√™n:</span>
                        <span className="detail-value">{product.instructor}</span>
                      </div>
                    </>
                  )}

                  {product.category === 'book' && (
                    <>
                      <div className="detail-row">
                        <span className="detail-label">‚úçÔ∏è T√°c gi·∫£:</span>
                        <span className="detail-value">{product.author}</span>
                      </div>
                      <div className="detail-row">
                        <span className="detail-label">üìÑ S·ªë trang:</span>
                        <span className="detail-value">{product.pages} trang</span>
                      </div>
                      <div className="detail-row">
                        <span className="detail-label">üè¢ Nh√† xu·∫•t b·∫£n:</span>
                        <span className="detail-value">{product.publisher}</span>
                      </div>
                    </>
                  )}

                  {product.category === 'document' && (
                    <>
                      <div className="detail-row">
                        <span className="detail-label">üìÅ ƒê·ªãnh d·∫°ng:</span>
                        <span className="detail-value">{product.format}</span>
                      </div>
                      <div className="detail-row">
                        <span className="detail-label">üìÑ S·ªë trang:</span>
                        <span className="detail-value">{product.pages} trang</span>
                      </div>
                      {product.downloadable && (
                        <div className="detail-row">
                          <span className="detail-label">‚¨áÔ∏è T·∫£i xu·ªëng:</span>
                          <span className="detail-value">C√≥ th·ªÉ t·∫£i ngay</span>
                        </div>
                      )}
                    </>
                  )}
                </div>
              </div>

              {/* Tags */}
              <div className="modal-tags">
                <h3>T·ª´ kh√≥a</h3>
                <div className="tags-container">
                  {product.tags.map((tag, index) => (
                    <span key={index} className="modal-tag">
                      {tag}
                    </span>
                  ))}
                </div>
              </div>

              {/* Actions */}
              <div className="modal-actions">
                <button 
                  className="btn btn-add-cart-modal"
                  onClick={handleAddToCart}
                >
                  üõí Th√™m v√†o gi·ªè h√†ng
                </button>
              </div>
            </div>
          </div>

          {/* Suggestion Section - Full Width */}
          <Suggestion
            currentProduct={product}
            allProducts={allProducts}
            favorites={favorites}
            onViewDetails={(suggestedProduct) => {
              // ƒê√≥ng modal hi·ªán t·∫°i v√† m·ªü modal m·ªõi v·ªõi s·∫£n ph·∫©m ƒë∆∞·ª£c g·ª£i √Ω
              onClose();
              setTimeout(() => {
                // Trigger view details cho s·∫£n ph·∫©m m·ªõi
                window.dispatchEvent(new CustomEvent('viewProductDetails', {
                  detail: suggestedProduct
                }));
              }, 300);
            }}
            onToggleFavorite={onToggleFavorite}
            showToast={showToast}
            onCloseModal={onClose}  // Truy·ªÅn function ƒë√≥ng modal
          />
        </div>
      </div>
    </div>
  );
};

export default ProductDetailModal;